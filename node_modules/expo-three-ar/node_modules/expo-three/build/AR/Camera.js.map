{"version":3,"file":"Camera.js","sourceRoot":"","sources":["../../src/AR/Camera.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,EAAE,EAAE,MAAM,MAAM,CAAC;AAC1B,OAAO,KAAK,MAAM,UAAU,CAAC;AAE7B,MAAM,QAAS,SAAQ,KAAK,CAAC,iBAAiB;IAI5C,YAAY,KAAa,EAAE,MAAc,EAAE,IAAY,EAAE,GAAW;QAClE,KAAK,EAAE,CAAC;QAoBV,2BAAsB,GAAG,GAAS,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAlB5D,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACjB,CAAC;IAED,iBAAiB;QACf,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACrC,MAAM,QAAQ,GAAG,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;YACvD,IAAI,QAAQ,IAAI,QAAQ,CAAC,UAAU,EAAE;gBACnC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gBACvD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBACrD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;aAC5D;SACF;IACH,CAAC;CAGF;AAED,eAAe,QAAQ,CAAC","sourcesContent":["import { AR } from 'expo';\nimport THREE from '../Three';\n\nclass ARCamera extends THREE.PerspectiveCamera {\n  width: number;\n  height: number;\n\n  constructor(width: number, height: number, near: number, far: number) {\n    super();\n\n    this.width = width;\n    this.height = height;\n    this.aspect = height > 0 ? width / height : 0;\n    this.near = near;\n    this.far = far;\n  }\n\n  updateMatrixWorld(): void {\n    if (this.width > 0 && this.height > 0) {\n      const matrices = AR.getARMatrices(this.near, this.far);\n      if (matrices && matrices.viewMatrix) {\n        this.matrixWorldInverse.fromArray(matrices.viewMatrix);\n        this.matrixWorld.getInverse(this.matrixWorldInverse);\n        this.projectionMatrix.fromArray(matrices.projectionMatrix);\n      }\n    }\n  }\n\n  updateProjectionMatrix = (): void => this.updateMatrixWorld();\n}\n\nexport default ARCamera;\n"]}