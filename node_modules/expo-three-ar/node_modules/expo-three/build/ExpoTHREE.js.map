{"version":3,"file":"ExpoTHREE.js","sourceRoot":"","sources":["../src/ExpoTHREE.ts"],"names":[],"mappings":"AAAA,OAAO,wBAAwB,CAAC;AAEhC,OAAO,KAAK,EAAE,MAAM,MAAM,CAAC;AAC3B,OAAO,KAAK,KAAK,MAAM,SAAS,CAAC;AACjC,OAAO,QAAQ,MAAM,YAAY,CAAC;AAClC,OAAO,EAAE,OAAO,IAAI,SAAS,EAAE,MAAM,aAAa,CAAC;AACnD,OAAO,EAAE,gBAAgB,EAAE,MAAM,4BAA4B,CAAC;AAE9D,cAAc,2BAA2B,CAAC;AAC1C;;EAEE;AACF,MAAM,UAAU,cAAc,CAAC,KAAK;IAClC,OAAO,CAAC,GAAG,CACT,gGAAgG,CACjG,CAAC;IACF,OAAO,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC7B,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,KAAK;IAC5B,OAAO,CAAC,GAAG,CACT,0FAA0F,CAC3F,CAAC;IAEF,OAAO,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC7B,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,EAAE,KAAK,EAAE;IAC1C,OAAO,CAAC,GAAG,CACT,mIAAmI,CACpI,CAAC;IACF,OAAO,gBAAgB,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;AACrC,CAAC;AAED,MAAM,UAAU,yBAAyB,CACvC,QAA6B;IAE7B,OAAO,CAAC,GAAG,CACT,+HAA+H,CAChI,CAAC;IAEF,OAAO,IAAI,EAAE,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;AAC5C,CAAC;AAED,MAAM,UAAU,cAAc,CAC5B,SAAc,EACd,KAAa,EACb,MAAc,EACd,KAAa,EACb,IAAY;IAEZ,OAAO,CAAC,GAAG,CACT,sJAAsJ,CACvJ,CAAC;IAEF,OAAO,IAAI,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AACnD,CAAC;AAED;;EAEE;AACF,OAAO,EAAE,OAAO,IAAI,WAAW,EAAE,MAAM,eAAe,CAAC;AACvD,OAAO,EAAE,OAAO,IAAI,oBAAoB,EAAE,MAAM,wBAAwB,CAAC;AACzE,OAAO,EAAE,OAAO,IAAI,UAAU,EAAE,MAAM,cAAc,CAAC;AACrD,OAAO,EAAE,OAAO,IAAI,KAAK,EAAE,MAAM,SAAS,CAAC;AAC3C,OAAO,EAAE,OAAO,IAAI,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAC3D,MAAM,CAAC,MAAM,OAAO,GAAG,EAAE,CAAC;AAE1B,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC;AAE/B,cAAc,2BAA2B,CAAC;AAC1C,cAAc,4BAA4B,CAAC","sourcesContent":["import '@expo/browser-polyfill';\n\nimport * as AR from './AR';\nimport * as utils from './utils';\nimport Renderer from './Renderer';\nexport { default as loadAsync } from './loadAsync';\nimport { loadTextureAsync } from './loaders/loadTextureAsync';\nimport * as THREE from 'three';\nexport * from './loaderClassForExtension';\n/*\n Legacy\n*/\nexport function createRenderer(props): Renderer {\n  console.log(\n    'Warning: `ExpoTHREE.createRenderer(props)` is deprecated, use: `new ExpoTHREE.Renderer(props)`',\n  );\n  return new Renderer(props);\n}\n\nexport function renderer(props): Renderer {\n  console.log(\n    'Warning: `ExpoTHREE.renderer(props)` is deprecated, use: `new ExpoTHREE.Renderer(props)`',\n  );\n\n  return new Renderer(props);\n}\n\nexport function createTextureAsync({ asset }) {\n  console.log(\n    'Warning: `ExpoTHREE.createTextureAsync({ asset })` is deprecated, use: `new ExpoTHREE.loadAsync(asset, onLoad, onAssetRequested)`',\n  );\n  return loadTextureAsync({ asset });\n}\n\nexport function createARBackgroundTexture(\n  renderer: THREE.WebGLRenderer,\n): AR.BackgroundTexture {\n  console.log(\n    'Warning: `ExpoTHREE.createTextureAsync({ asset })` is deprecated, use: `ExpoTHREE.loadAsync(asset, onLoad, onAssetRequested)`',\n  );\n\n  return new AR.BackgroundTexture(renderer);\n}\n\nexport function createARCamera(\n  arSession: any,\n  width: number,\n  height: number,\n  zNear: number,\n  zFar: number,\n) {\n  console.log(\n    'Warning: `ExpoTHREE.createARCamera(arSession, width, height, zNear, zFar)` is deprecated, use: `new ExpoTHREE.AR.Camera(width, height, zNear, zFar)`',\n  );\n\n  return new AR.Camera(width, height, zNear, zFar);\n}\n\n/*\n Exports\n*/\nexport { default as CubeTexture } from './CubeTexture';\nexport { default as loadCubeTextureAsync } from './loadCubeTextureAsync';\nexport { default as parseAsync } from './parseAsync';\nexport { default as THREE } from './Three';\nexport { default as TextureLoader } from './TextureLoader';\nexport const ThreeAR = AR;\n\nexport { AR, utils, Renderer };\n\nexport * from './loaders/loadModelsAsync';\nexport * from './loaders/loadTextureAsync';\n"]}